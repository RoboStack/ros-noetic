diff --git a/ros_babel_fish/CMakeLists.txt b/ros_babel_fish/CMakeLists.txt
index 45e26fe..4d3fe71 100644
--- a/ros_babel_fish/CMakeLists.txt
+++ b/ros_babel_fish/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.5.1)
+cmake_minimum_required(VERSION 3.10.2)
 project(ros_babel_fish VERSION 0.9.1)
 
 # If the value doesn't fit, an exception is thrown in any case because that could result in unexpected behavior and can not be ignored lightly
@@ -9,7 +9,8 @@ if (WARN_ON_INCOMPATIBLE_TYPE)
 endif ()
 
 ## Compile as C++11, supported in ROS Kinetic and newer
-add_compile_options(-std=c++11)
+set(CMAKE_CXX_STANDARD 17)
+set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
 add_definitions(-Wall -Wextra)
 
@@ -20,6 +21,7 @@ add_definitions(-Wall -Wextra)
 ## is used, also find other catkin packages
 find_package(catkin REQUIRED COMPONENTS actionlib roscpp roslib std_msgs)
 find_package(OpenSSL REQUIRED)
+find_package(Boost REQUIRED COMPONENTS filesystem)
 
 ###################################
 ## catkin specific configuration ##
@@ -34,7 +36,7 @@ catkin_package(
   INCLUDE_DIRS include
   LIBRARIES ${PROJECT_NAME}
   CATKIN_DEPENDS actionlib roscpp roslib
-  DEPENDS OPENSSL
+  DEPENDS OPENSSL Boost
 )
 
 ###########
@@ -46,6 +48,7 @@ catkin_package(
 include_directories(
   include
   ${catkin_INCLUDE_DIRS}
+  ${Boost_INCLUDE_DIRS}
   ${OPENSSL_INCLUDE_DIR}
 )
 
diff --git a/ros_babel_fish/include/ros_babel_fish/message.h b/ros_babel_fish/include/ros_babel_fish/message.h
index 278378c..cbff795 100644
--- a/ros_babel_fish/include/ros_babel_fish/message.h
+++ b/ros_babel_fish/include/ros_babel_fish/message.h
@@ -8,7 +8,9 @@
 #include "ros_babel_fish/exceptions/babel_fish_exception.h"
 #include <ros/time.h>
 
+#include <cstdint>
 #include <memory>
+#include <stddef.h>
 
 namespace ros_babel_fish
 {
@@ -64,7 +66,7 @@ public:
   /*!
    * Alias for _stream(). Removed in future release.
    */
-  __attribute_deprecated__ const uint8_t *data() const { return _stream(); }
+  const uint8_t *data() const { return _stream(); }
 
   /*!
    * @return Size of the message in bytes if serialized in ROS message binary format
@@ -74,7 +76,7 @@ public:
   /*!
    * Alias for _sizeInBytes(). Removed in future release.
    */
-  __attribute_deprecated__ size_t size() const { return _sizeInBytes(); }
+  size_t size() const { return _sizeInBytes(); }
 
   /*!
    * @return Whether or not the message is detached from the stream. If false, the message is not fully copied and still relies on the translated message.
diff --git a/ros_babel_fish/include/ros_babel_fish/messages/array_message.h b/ros_babel_fish/include/ros_babel_fish/messages/array_message.h
index 0dfd852..0d48675 100644
--- a/ros_babel_fish/include/ros_babel_fish/messages/array_message.h
+++ b/ros_babel_fish/include/ros_babel_fish/messages/array_message.h
@@ -117,7 +117,7 @@ public:
    * Alias for assign
    * Deprecated, will be removed in a future release
    */
-  __attribute_deprecated__ void setItem( size_t index, ArgumentType value ) { assign( index, value ); }
+  void setItem( size_t index, ArgumentType value ) { assign( index, value ); }
 
   void push_back( ArgumentType value )
   {
@@ -139,7 +139,7 @@ public:
    * Alias for push_back
    * Deprecated, will be removed in a future release
    */
-  __attribute_deprecated__ void addItem( ArgumentType value ) { push_back( value ); }
+  void addItem( ArgumentType value ) { push_back( value ); }
 
   size_t _sizeInBytes() const override
   {
diff --git a/ros_babel_fish/src/generation/providers/integrated_description_provider.cpp b/ros_babel_fish/src/generation/providers/integrated_description_provider.cpp
index d724b43..ce32011 100644
--- a/ros_babel_fish/src/generation/providers/integrated_description_provider.cpp
+++ b/ros_babel_fish/src/generation/providers/integrated_description_provider.cpp
@@ -5,11 +5,11 @@
 
 #include <ros/package.h>
 
-#include <experimental/filesystem>
+#include <boost/filesystem.hpp>
 #include <fstream>
 #include <regex>
 
-namespace fs = std::experimental::filesystem;
+namespace fs = boost::filesystem;
 
 namespace ros_babel_fish
 {

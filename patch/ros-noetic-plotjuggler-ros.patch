diff --git a/plugins/ros1_introspection/src/ros_message.cpp b/plugins/ros1_introspection/src/ros_message.cpp
index 0ea008c..289b880 100644
--- a/plugins/ros1_introspection/src/ros_message.cpp
+++ b/plugins/ros1_introspection/src/ros_message.cpp
@@ -59,7 +59,7 @@ ROSMessage::ROSMessage(const std::string& msg_def)
     }
 
     // Trim start of line
-    line.erase(line.begin(), std::find_if(line.begin(), line.end(), std::not1(std::ptr_fun<int, int>(std::isspace))));
+    line.erase(line.begin(), std::find_if(line.begin(), line.end(), [](int c) {return !std::isspace(c);}));
 
     if (line.compare(0, 5, "MSG: ") == 0)
     {
diff --git a/plugins/ros1_parsers/fiveai_stamped_diagnostic.h b/plugins/ros1_parsers/fiveai_stamped_diagnostic.h
index cdf758a..1fc84dd 100644
--- a/plugins/ros1_parsers/fiveai_stamped_diagnostic.h
+++ b/plugins/ros1_parsers/fiveai_stamped_diagnostic.h
@@ -100,7 +100,7 @@ class FiveAiDiagnosticMsg : public RosMessageParser
       {
         auto key = fmt::format("{}/{}/status", _topic_name, replaced_key);
         auto& series = getSeries(key);
-        series.pushBack({ timestamp, diag.status });
+        series.pushBack({ timestamp, static_cast<double>(diag.status) });
       }
 
     }
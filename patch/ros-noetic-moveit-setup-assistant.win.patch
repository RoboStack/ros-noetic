diff --git a/CMakeLists.txt b/CMakeLists.txt
index c39d7cfe2..9fc8981b0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -50,6 +50,7 @@ add_definitions(-DQT_NO_KEYWORDS)
 find_package(PkgConfig)
 pkg_check_modules(YAMLCPP REQUIRED yaml-cpp>=0.5)
 include_directories(SYSTEM ${YAMLCPP_INCLUDE_DIRS})
+link_directories(${YAMLCPP_LIBRARY_DIRS})
 
 catkin_package(
   INCLUDE_DIRS
diff --git a/src/tools/collision_linear_model.h b/src/tools/collision_linear_model.h
index 9cd06f5911..283145c1d3 100644
--- a/src/tools/collision_linear_model.h
+++ b/src/tools/collision_linear_model.h
@@ -41,8 +41,21 @@
 #include <QVector>
 
 #include "collision_matrix_model.h"
+#include <ros/macros.h>
 
-class CollisionLinearModel : public QAbstractProxyModel
+// Import/export for windows dll's and visibility for gcc shared libraries.
+
+#ifdef ROS_BUILD_SHARED_LIBS // ros is being built around shared libraries
+  #ifdef moveit_setup_assistant_tools_EXPORTS // we are building a shared lib/dll
+    #define MOVEIT_SETUP_ASSISTANT_TOOLS_DECL ROS_HELPER_EXPORT
+  #else // we are using shared lib/dll
+    #define MOVEIT_SETUP_ASSISTANT_TOOLS_DECL ROS_HELPER_IMPORT
+  #endif
+#else // ros is being built around static libraries
+  #define MOVEIT_SETUP_ASSISTANT_TOOLS_DECL
+#endif
+
+class MOVEIT_SETUP_ASSISTANT_TOOLS_DECL CollisionLinearModel : public QAbstractProxyModel
 {
   Q_OBJECT
 
@@ -71,7 +84,7 @@ class CollisionLinearModel : public QAbstractProxyModel
 };
 
 /** proxy model to allow for sorting of CollisionLinearModel, considering sorting history */
-class SortFilterProxyModel : public QSortFilterProxyModel
+class MOVEIT_SETUP_ASSISTANT_TOOLS_DECL SortFilterProxyModel : public QSortFilterProxyModel
 {
   Q_OBJECT
 
diff --git a/src/tools/moveit_config_data.cpp b/src/tools/moveit_config_data.cpp
index ff2e3aa27..faf9a760d 100644
--- a/src/tools/moveit_config_data.cpp
+++ b/src/tools/moveit_config_data.cpp
@@ -881,7 +881,7 @@ srdf::Model::GroupState MoveItConfigData::getDefaultStartPose()
   if (!srdf_->group_states_.empty())
     return srdf_->group_states_[0];
   else
-    return srdf::Model::GroupState{ .name_ = "todo_state_name", .group_ = "todo_group_name", .joint_values_ = {} };
+    return srdf::Model::GroupState{ "todo_state_name", "todo_group_name", {} };
 }
 
 // ******************************************************************************************

on:
  pull_request:
  workflow_dispatch:

env:
  ROS_VERSION: 1

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux-64
          - os: ubuntu-24.04-arm
            platform: linux-aarch64
          - os: macos-13
            platform: osx-64
          - os: macos-14
            platform: osx-arm64
          - os: windows-2022
            platform: win-64


    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

    - uses: prefix-dev/setup-pixi@v0.8.10
      with:
        frozen: true

    # Workaround for https://github.com/RoboStack/ros-humble/pull/141#issuecomment-1941919816
    - name: Clean up PATH
      if: contains(matrix.os, 'windows')
      uses: egor-tensin/cleanup-path@v4
      with:
        # cygpath in C:\Program Files\Git\usr\bin is used by install micromamba
        # git in C:\Program Files\Git\bin is used by pip install git+
        dirs: 'C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin'

    # For some reason, the Strawberry perl's pkg-config is found
    # instead of the conda's one, so let's delete the /c/Strawberry directory
    # Furthermore, we also need to remove an older SDK that is used and can result in compilation problems
    - name: Debug pkg-config problem
      if: contains(matrix.os, 'windows')
      shell: bash -l {0}
      run: |
        rm -rf /c/Strawberry
        rm -rf "/c/Program Files (x86)/Windows Kits/10/Include/10.0.17763.0/"

    - name: Generate recipes for linux-64
      shell: bash -l {0}
      if: matrix.platform == 'linux-64'
      run: |
        cp vinca_linux_64.yaml vinca.yaml
        mkdir -p recipes
        $HOME/.pixi/bin/pixi run -v vinca --platform linux-64 -m
        ls -la recipes
    - name: Generate recipes for linux-aarch64
      shell: bash -l {0}
      if: matrix.platform == 'linux-aarch64'
      run: |
        cp vinca_linux_aarch64.yaml vinca.yaml
        mkdir -p recipes
        $HOME/.pixi/bin/pixi run -v vinca --platform linux-aarch64 -m
        ls -la recipes
    - name: Generate recipes for osx-64
      shell: bash -l {0}
      if: matrix.platform == 'osx-64'
      run: |
        cp vinca_osx.yaml vinca.yaml
        mkdir -p recipes
        $HOME/.pixi/bin/pixi run -v vinca --platform osx-64 -m
        ls -la recipes
    - name: Generate recipes for osx-arm64
      shell: bash -l {0}
      if: matrix.platform == 'osx-arm64'
      run: |
        cp vinca_osx_arm64.yaml vinca.yaml
        mkdir -p recipes
        $HOME/.pixi/bin/pixi run -v vinca --platform osx-arm64 -m
        ls -la recipes
    - name: Generate recipes for win-64
      shell: bash -l {0}
      if: matrix.platform == 'win-64'
      run: |
        # Workaround for problem related to long paths
        echo "CONDA_BLD_PATH=C:\\bld\\" >> $GITHUB_ENV
        mkdir /c/bld
        cp vinca_win.yaml vinca.yaml
        mkdir -p recipes
        $HOME/.pixi/bin/pixi run -v vinca --platform win-64 -m
        ls -la recipes
    - name: Check if there are packages to be built
      id: newrecipecheck
      shell: bash -l {0}
      run: |
        set +e
        if [ ! -d recipes ] || [ -z "$(ls -A recipes)" ]; then
          echo "RECIPE_CREATED=0" >> $GITHUB_OUTPUT
        else
          echo "RECIPE_CREATED=1" >> $GITHUB_OUTPUT
        fi
    - name: Build recipes for linux-64
      shell: bash -l {0}
      if: steps.newrecipecheck.outputs.RECIPE_CREATED == 1 && matrix.platform == 'linux-64'
      run: |
        env -i $HOME/.pixi/bin/pixi run rattler-build build --recipe-dir additional_recipes --target-platform linux-64 -m ./conda_build_config.yaml -c robostack-staging -c conda-forge --skip-existing
        env -i $HOME/.pixi/bin/pixi run rattler-build build --recipe-dir recipes --target-platform linux-64 -m ./conda_build_config.yaml -c robostack-staging -c conda-forge --skip-existing
    - name: Build recipes for linux-aarch64
      shell: bash -l {0}
      if: steps.newrecipecheck.outputs.RECIPE_CREATED == 1 && matrix.platform == 'linux-aarch64'
      run: |
        env -i $HOME/.pixi/bin/pixi run rattler-build build --recipe-dir additional_recipes --target-platform linux-aarch64 -m ./conda_build_config.yaml -c robostack-staging -c conda-forge --skip-existing
        env -i $HOME/.pixi/bin/pixi run rattler-build build --recipe-dir recipes --target-platform linux-aarch64 -m ./conda_build_config.yaml -c robostack-staging -c conda-forge --skip-existing
    - name: Build recipes for osx-64
      shell: bash -l {0}
      if: steps.newrecipecheck.outputs.RECIPE_CREATED == 1 && matrix.platform == 'osx-64'
      run: |
        env -i $HOME/.pixi/bin/pixi run rattler-build build --recipe-dir additional_recipes --target-platform osx-64 -m ./conda_build_config.yaml -c robostack-staging -c conda-forge --skip-existing
        env -i $HOME/.pixi/bin/pixi run rattler-build build --recipe-dir recipes --target-platform osx-64 -m ./conda_build_config.yaml -c robostack-staging -c conda-forge --skip-existing
    - name: Build recipes for osx-arm64
      shell: bash -l {0}
      if: steps.newrecipecheck.outputs.RECIPE_CREATED == 1 && matrix.platform == 'osx-arm64'
      run: |
        env -i $HOME/.pixi/bin/pixi run rattler-build build --recipe-dir additional_recipes --target-platform osx-arm64 -m ./conda_build_config.yaml -c robostack-staging -c conda-forge --skip-existing
        env -i $HOME/.pixi/bin/pixi run rattler-build build --recipe-dir recipes --target-platform osx-arm64 -m ./conda_build_config.yaml -c robostack-staging -c conda-forge --skip-existing
    - name: Build recipes for win-64
      shell: bash -l {0}
      if: steps.newrecipecheck.outputs.RECIPE_CREATED == 1 && matrix.platform == 'win-64'
      run: |
        $HOME/.pixi/bin/pixi run rattler-build build --recipe-dir additional_recipes --target-platform win-64 -m ./conda_build_config.yaml -c robostack-staging -c conda-forge --skip-existing
        $HOME/.pixi/bin/pixi run rattler-build build --recipe-dir recipes -m ./conda_build_config.yaml --target-platform win-64 -c robostack-staging -c conda-forge --skip-existing
